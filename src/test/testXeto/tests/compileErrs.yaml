#
# Tests for compiler errors
#


##########################################################################
## InheritSlots
##########################################################################

---
name: "cycle1"
compileLib: |
  Foo: Foo
verifyErrs: |
  Cyclic inheritance: Foo
---
name: "cycle2"
compileLib: |
  Foo: Bar
  Bar: Foo
verifyErrs: |
  Cyclic inheritance: Foo
  Cyclic inheritance: Bar
---
name: "cycle3"
compileLib: |
  Foo: Bar
  Bar: Baz
  Baz: Foo
verifyErrs: |
  Cyclic inheritance: Foo
  Cyclic inheritance: Bar
  Cyclic inheritance: Baz
---
name: "conflictSlots1"
compileLib: |
  Foo: {x:Str}
  Bar: {x:Date}
  Baz: Foo & Bar
verifyErrs: |
  Conflicing inherited slots: temp::Foo.x, temp::Bar.x
---

##########################################################################
## CheckErrors
##########################################################################

---
name: "reservedMeta"
compileLib: |
  Foo: Dict <id:"x", base:"x", type:"x", spec:"x", slots:"x", lib:"x", loc:"x">
verifyErrs: |
  Spec 'Foo' cannot use reserved meta tag 'id'
  Spec 'Foo' cannot use reserved meta tag 'base'
  Spec 'Foo' cannot use reserved meta tag 'type'
  Spec 'Foo' cannot use reserved meta tag 'spec'
  Spec 'Foo' cannot use reserved meta tag 'slots'
  Spec 'Foo' cannot use reserved meta tag 'lib'
  Spec 'Foo' cannot use reserved meta tag 'loc'
---
name: "wrongInheritType"
compileLib: |
  Foo: {
    x:Date
    y:Number
  }
  Bar: Foo {
    x:Str
    y:Int  // ok
  }
verifyErrs: |
  Slot 'x' type 'sys::Str' conflicts inherited slot 'temp::Foo.x' of type 'sys::Date'
---
name: "wrongGlobalType"
compileLib: |
  pragma: Lib <
      doc: "Test lib"
      version: "1.2.3"
      depends: { {lib:"sys"}, {lib:"ph"} }
    >
    x: Str
  y: Number
  Bar: {
    x
    y: Int // ok
    space: Str
  }
verifyErrs: |
  Slot 'x' type 'sys::Marker' conflicts global slot 'temp::x' of type 'sys::Str'
  Slot 'space' type 'sys::Str' conflicts global slot 'ph::space' of type 'sys::Marker'
---

